{"version":3,"sources":["webpack:///main.18b27bc3ba974659cd32.js","webpack:///webpack/bootstrap 18b27bc3ba974659cd32","webpack:///./src/js/sudoku-ui.js","webpack:///./src/js/sudoku.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_toConsumableArray","arr","Array","isArray","arr2","length","from","_slicedToArray","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","err","TypeError","_sudoku","_sudoku2","obj","default","puzzle","getPuzzle","peers","squares","grid","document","getElementById","rows","cols","map","x","toString","peerIds","Map","squarePeers","focusedSquare","highlightedPeers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref","_ref2","set","toLowerCase","Set","concat","return","cellSize","offsetWidth","highlightPeers","forEach","id","setAttribute","contentClass","highlightSquare","e","target","onSquareClick","onInput","keyCode","innerHTML","key","row","createElement","style","height","j","square","width","maxWidth","flex","content","onclick","onkeydown","appendChild","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref3","_ref4","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","solution","_ref5","_ref6","cross","a","b","values","a1","b1","add","parseGrid","digits","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","gridValues","entries","has","assign","chars","filter","console","assert","all","d2","eliminate","size","s2","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","units","unit","dplaces","solve","search","sort","s1","some","seq","func","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","result","shuffle","array","currentIndex","temporaryValue","randomIndex","Math","floor","random","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","solved","unitSolved","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","unitlist","u","randomPuzzle","arguments","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","randomValue","ds","getRandomInt","min","max","r"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,EAASH,GAEjC,YAaA,SAAS2B,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAII,QAAS3B,EAAIuB,EAAII,OAAQ3B,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMI,KAAKL,GAV1L,GAAIM,GAAiB,WAAc,QAASC,GAAcP,EAAKvB,GAAK,GAAI+B,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKC,EAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKd,EAAIe,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGO,QAAY3C,GAAK+B,EAAKJ,SAAW3B,GAA3DgC,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUR,EAAKvB,GAAK,GAAIwB,MAAMC,QAAQF,GAAQ,MAAOA,EAAY,IAAIe,OAAOC,WAAY9B,QAAOc,GAAQ,MAAOO,GAAcP,EAAKvB,EAAa,MAAM,IAAI6C,WAAU,4DExEtlBC,EAAAnD,EAAA,GF4EIoD,EAIJ,SAAgCC,GAAO,MAAOA,IAAOA,EAAIjC,WAAaiC,GAAQC,QAASD,IAJjDF,EE3EtCnD,GAAA,EAEA,IA0FIuD,GAASH,EAAAE,QAAOE,YAChBC,EAAQL,EAAAE,QAAOG,MACfC,EA5Fa,SAACD,GAEhB,GAAIE,GAAOC,SAASC,eAAe,kBAC/BC,GAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChDC,GAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,SAAAC,GAAA,MAAKA,GAAEC,aAE9CC,EAAU,GAAIC,KACdV,EAAU,GAAIU,KACdC,EAAc,GAAID,KAElBE,SACAC,SAXsBC,GAAA,EAAAC,GAAA,EAAAC,MAAAlC,EAAA,KAa1B,OAAAmC,GAAAC,EAAmBnB,EAAnBd,OAAAC,cAAA4B,GAAAG,EAAAC,EAAA/B,QAAAC,MAAA0B,GAAA,EAA0B,IAAAK,GAAAF,EAAA3B,MAAA8B,EAAA5C,EAAA2C,EAAA,GAAhBnD,EAAgBoD,EAAA,GAAbrD,EAAaqD,EAAA,EACxBX,GAAQY,IAAIrD,EAAEsD,cAAe,GAAIC,QAAIC,OAAAvD,EAAIF,IAAGuC,IAAI,SAAAC,GAAA,MAAKA,GAAEe,mBAd/B,MAAA/B,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,aAAAuB,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAoD1B,IAAK,GAlCCU,GAAYzB,EAAK0B,YADb,EACgC,EAKtCC,EAAiB,SAAA5D,GACf6C,GACFA,EAAiBgB,QAAQ,SAAA9D,GACnBA,EAAE+D,KAAO9D,GAAGD,EAAEgE,aAAa,QALhB,oBAQnBlB,EAAmBF,EAAYnD,IAAIQ,GACnC6C,EAAiBgB,QAAQ,SAAA9D,GAAA,MAAKA,GAAEgE,aAAa,QAAYC,+BAGvDC,EAAkB,SAAAC,GAChBtB,GACFA,EAAcmB,aAAa,QAdV,kBAgBnBnB,EAAgBsB,EAAEC,OAClBvB,EAAcmB,aAAa,QAAYC,kCACvCJ,EAAeM,EAAEC,OAAOL,KAGtBM,EAAgB,SAAAF,GAClBD,EAAgBC,IAGdG,EAAU,SAAAH,GACRA,EAAEI,SAAW,IAAMJ,EAAEI,SAAW,IAC9B1B,IAAeA,EAAc2B,UAAYL,EAAEM,MAI1C7F,EAAI,EAAGA,EAnCN,EAmCaA,IAAK,CAC1B,GAAI8F,GAAMvC,SAASwC,cAAc,MACjCD,GAAIV,aAAa,QAAS,OAC1BU,EAAIE,MAAMC,OAAYlB,EAAtB,IAEA,KAAK,GAAImB,GAAI,EAAGA,EAxCR,EAwCeA,IAAK,CAC1B,GAAIf,MAAQ1B,EAAKzD,GAAK0D,EAAKwC,GACvBC,EAAS5C,SAASwC,cAAc,MAEpCI,GAAOhB,GAAKA,EACZgB,EAAOf,aAAa,QA1CJ,gBA4ChBe,EAAOH,MAAMC,OAAYlB,EAAzB,KACAoB,EAAOH,MAAMI,MAAWrB,EAAxB,KACAoB,EAAOH,MAAMK,SAActB,EAA3B,KACAoB,EAAOH,MAAMM,KAAb,OAA2BvB,EAA3B,IAEA,IAAIwB,GAAUhD,SAASwC,cAAc,MACrCQ,GAAQpB,GAAKA,EACboB,EAAQnB,aAAa,QAlDJ,kBAoDjBmB,EAAQC,QAAUf,EAClBlC,SAASkD,UAAYf,EAErBS,EAAOO,YAAYH,GACnBT,EAAIY,YAAYP,GAChB9C,EAAQqB,IAAIS,EAAIoB,GAGlBjD,EAAKoD,YAAYZ,GAjFO,GAAAa,IAAA,EAAAC,GAAA,EAAAC,MAAA1E,EAAA,KAoF1B,OAAA2E,GAAAC,EAAmBjD,EAAnBxB,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,GAAA,MAAAK,GAAAF,EAAAnE,MAAAsE,EAAApF,EAAAmF,EAAA,GAAU3F,EAAV4F,EAAA,GAAa7F,EAAb6F,EAAA,EACEjD,GAAYU,IAAIrD,KAAGwD,OAAAvD,EAAIF,IAAGuC,IAAI,SAAAC,GAAA,MAAKP,GAAQxC,IAAI+C,OArFvB,MAAAhB,GAAAgE,GAAA,EAAAC,EAAAjE,EAAA,aAAA+D,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,IAuF1B,MAAOxD,IAKgBD,GF8IrB8D,GAA6B,EAC7BC,GAAqB,EACrBC,MAAkBjF,EAEtB,KEhJA,OAAAkF,GAAAC,EAAmBpE,EAAOqE,SAA1BjF,OAAAC,cAAA2E,GAAAG,EAAAC,EAAA9E,QAAAC,MAAAyE,GAAA,MAAAM,GAAAH,EAAA1E,MAAA8E,EAAA5F,EAAA2F,EAAA,GAAUnG,EAAVoG,EAAA,GAAapH,EAAboH,EAAA,EACEpE,GAAQxC,IAAIQ,EAAEsD,eAAeiB,aAAYf,OAAAvD,EAAIjB,IAAG,IF0JhD,MAAOuC,GACPuE,GAAqB,EACrBC,EAAkBxE,EAClB,QACA,KACOsE,GAA8BI,EAAWxC,QAC5CwC,EAAWxC,SAEb,QACA,GAAIqC,EACF,KAAMC,MAON,SAAUrH,EAAQD,EAASH,GAEjC,YASA,SAAS2B,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvB,GAAI,EAAG0B,EAAOF,MAAMD,EAAII,QAAS3B,EAAIuB,EAAII,OAAQ3B,IAAO0B,EAAK1B,GAAKuB,EAAIvB,EAAM,OAAO0B,GAAe,MAAOF,OAAMI,KAAKL,GG1O1L,QAASmG,GAAMC,EAAGC,GAChB,GAAIxH,GAAI,GAAIwE,KADO+B,GAAA,EAAAC,GAAA,EAAAC,MAAA1E,EAAA,KAGnB,OAAA2E,GAAAC,EAAeY,EAAEE,SAAjBvF,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,GAAA,EAA2B,IAAlBmB,GAAkBhB,EAAAnE,MAAAuE,GAAA,EAAAC,GAAA,EAAAC,MAAAjF,EAAA,KACzB,OAAAkF,GAAAC,GAAeM,EAAEC,UAAYD,GAA7BtF,OAAAC,cAAA2E,GAAAG,EAAAC,EAAA9E,QAAAC,MAAAyE,GAAA,EAAgC,IAAvBa,GAAuBV,EAAA1E,KAC9BvC,GAAE4H,IAAIF,EAAKC,IAFY,MAAAnF,GAAAuE,GAAA,EAAAC,EAAAxE,EAAA,aAAAsE,GAAAI,EAAAxC,QAAAwC,EAAAxC,SAAA,WAAAqC,EAAA,KAAAC,MAHR,MAAAxE,GAAAgE,GAAA,EAAAC,EAAAjE,EAAA,aAAA+D,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,IASnB,MAAOzG,GAOT,QAAS6H,GAAU3E,GACjB,GAAIuE,GAAS,GAAI9D,IACjBV,GAAQ6B,QAAQ,SAAA7D,GAAA,MAAKwG,GAAOnD,IAAIrD,EAAG6G,IAFZ,IAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAAlG,EAAA,KAIvB,OAAAmG,GAAAC,EAAmBC,EAAWlF,GAAMmF,UAApCnG,OAAAC,cAAA4F,GAAAG,EAAAC,EAAA/F,QAAAC,MAAA0F,GAAA,EAA+C,IAAA3D,GAAA8D,EAAA3F,MAAA8B,EAAA5C,EAAA2C,EAAA,GAArCnD,EAAqCoD,EAAA,GAAlCpE,EAAkCoE,EAAA,EAC7C,IAAIyD,EAAOQ,IAAIrI,KAAOsI,EAAOd,EAAQxG,EAAGhB,GACtC,OAAO,GANY,MAAAuC,GAAAwF,GAAA,EAAAC,EAAAzF,EAAA,aAAAuF,GAAAI,EAAAzD,QAAAyD,EAAAzD,SAAA,WAAAsD,EAAA,KAAAC,IAUvB,MAAOR,GAMT,QAASW,GAAWlF,GAClB,GAAIsF,GAAQtF,EAAKuF,OAAO,SAAAzI,GAAA,MAAK8H,GAAOQ,IAAItI,IAAY,MAANA,GAAmB,MAANA,IACvDyH,EAAS,GAAI9D,KACb1C,cAAQgC,GAEZyF,SAAQC,OAAwB,KAAjBH,EAAMjH,OAErB,KAAK,GAAI3B,GAAI,EAAGA,EAAIqB,EAAEM,OAAQ3B,IAC5B6H,EAAOnD,IAAIrD,EAAErB,GAAI4I,EAAM5I,GAGzB,OAAO6H,GAOT,QAASc,GAAOd,EAAQxG,EAAGhB,GAEzB,QAAO2I,KADMnE,OAAAvD,EAAIuG,EAAOhH,IAAIQ,KAAIwH,OAAO,SAAAjF,GAAA,MAAKA,KAAMvD,IAChCsD,IAAI,SAAAsF,GAAA,MAAMC,GAAUrB,EAAQxG,EAAG4H,OAAQpB,EAO3D,QAASqB,GAAUrB,EAAQxG,EAAGhB,GAC5B,IAAKwH,EAAOhH,IAAIQ,GAAGqH,IAAIrI,GACrB,MAAOwH,EAIT,IAFAA,EAAOnD,IAAIrD,EAAG,GAAIuD,QAAIC,OAAAvD,EAAIuG,EAAOhH,IAAIQ,KAAIwH,OAAO,SAAAjF,GAAA,MAAKA,KAAMvD,OAEtDwH,EAAOhH,IAAIQ,GAAG8H,KACjB,OAAO,CAEF,IAA2B,IAAvBtB,EAAOhH,IAAIQ,GAAG8H,KAAY,CACnC,GAAIF,MAAKpE,OAAAvD,EAAIuG,EAAOhH,IAAIQ,KAAI,EAE5B,KAAK2H,KAAInE,OAAAvD,EAAI8B,EAAMvC,IAAIQ,KAAIsC,IAAI,SAAAyF,GAAA,MAAMF,GAAUrB,EAAQuB,EAAIH,MACzD,OAAO,EAboB,GAAAI,IAAA,EAAAC,GAAA,EAAAC,MAAApH,EAAA,KAgB/B,OAAAqH,GAAAC,EAAiBC,EAAM7I,IAAIQ,GAA3BiB,OAAAC,cAAA8G,GAAAG,EAAAC,EAAAjH,QAAAC,MAAA4G,GAAA,EAA+B,IAAtBM,GAAsBH,EAAA7G,MACzBiH,KAAU/E,OAAAvD,EAAIqI,IAAMd,OAAO,SAAAO,GAAA,MAAMvB,GAAOhH,IAAIuI,GAAIV,IAAIrI,IAExD,KAAKuJ,EAAQjI,OACX,OAAO,CACF,IAAuB,IAAnBiI,EAAQjI,SACZgH,EAAOd,EAAQ+B,EAAQ,GAAIvJ,GAC9B,OAAO,GAvBkB,MAAAuC,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,aAAAyG,GAAAI,EAAA3E,QAAA2E,EAAA3E,SAAA,WAAAwE,EAAA,KAAAC,IA2B/B,MAAO1B,GAGT,QAASgC,GAAMvG,GACb,MAAOwG,GAAO7B,EAAU3E,IAM1B,QAASwG,GAAOjC,GACd,IAAKA,EACH,OAAO,CAET,IAAImB,KAAInE,OAAAvD,EAAI+B,IAASM,IAAI,SAAAtC,GAAA,MAA4B,KAAvBwG,EAAOhH,IAAIQ,GAAG8H,QAC1C,MAAOtB,EAET,IAAIxG,MAAIwD,OAAAvD,EAAI+B,IACPwF,OAAO,SAAAxH,GAAA,MAAKwG,GAAOhH,IAAIQ,GAAG8H,KAAO,IACjCY,KAAK,SAACC,EAAIZ,GAAL,MAAYvB,GAAOhH,IAAImJ,GAAIb,KAAOtB,EAAOhH,IAAIuI,GAAID,OAAM,EAEjE,OAAOc,GAAKpC,EAAOhH,IAAIQ,GAAI,SAAAhB,GAAA,MAAKyJ,GAAOnB,EAAO,GAAI5E,KAAI8D,GAASxG,EAAGhB,MAGpE,QAAS4J,GAAKC,EAAKC,GAAM,GAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAAnI,EAAA,KACvB,OAAAoI,GAAAC,EAAcN,EAAd5H,OAAAC,cAAA6H,GAAAG,EAAAC,EAAAhI,QAAAC,MAAA2H,GAAA,EAAmB,IAAV/J,GAAUkK,EAAA5H,MACb8H,EAASN,EAAK9J,EAClB,IAAIoK,EAAQ,MAAOA,IAHE,MAAA7H,GAAAyH,GAAA,EAAAC,EAAA1H,EAAA,aAAAwH,GAAAI,EAAA1F,QAAA0F,EAAA1F,SAAA,WAAAuF,EAAA,KAAAC,IAMvB,OAAO,EAOT,QAASI,GAAQR,GAKf,IAJA,GAAIS,eAAYT,IACZU,EAAeD,EAAMhJ,OAAQkJ,SAAgBC,SAG1C,IAAMF,GAGXE,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GACzCA,GAAgB,EAGhBC,EAAiBF,EAAMC,GACvBD,EAAMC,GAAgBD,EAAMG,GAC5BH,EAAMG,GAAeD,CAGvB,OAAOF,GAGT,QAAS3B,GAAInB,GAAQ,GAAAqD,IAAA,EAAAC,GAAA,EAAAC,MAAAjJ,EAAA,KACnB,OAAAkJ,GAAAC,EAAczD,EAAdvF,OAAAC,cAAA2I,GAAAG,EAAAC,EAAA9I,QAAAC,MAAAyI,GAAA,GACE,IADFG,EAAA1I,MACU,OAAO,GAFE,MAAAC,GAAAuI,GAAA,EAAAC,EAAAxI,EAAA,aAAAsI,GAAAI,EAAAxG,QAAAwG,EAAAxG,SAAA,WAAAqG,EAAA,KAAAC,IAInB,OAAO,EAMT,QAASG,GAAO1D,GACd,QAAS2D,GAAW7B,GAAM,GAAA8B,IAAA,EAAAC,GAAA,EAAAC,MAAAxJ,EAAA,KACxB,OAAAyJ,GAAAC,EAAclC,EAAdrH,OAAAC,cAAAkJ,GAAAG,EAAAC,EAAArJ,QAAAC,MAAAgJ,GAAA,EAAoB,IAAXpK,GAAWuK,EAAAjJ,KAElB,OADWkC,OAAAvD,EAAIuG,EAAOhH,IAAIQ,KAAIwH,OAAO,SAAAxI,GAAA,OAAM6H,EAAOQ,IAAIrI,KAC7CsB,OAAS,EAAG,OAAO,GAHN,MAAAiB,GAAA8I,GAAA,EAAAC,EAAA/I,EAAA,aAAA6I,GAAAI,EAAA/G,QAAA+G,EAAA/G,SAAA,WAAA4G,EAAA,KAAAC,IAMxB,OAAO,EAGT,MAAO9D,IAAUmB,EAAI8C,EAASnI,IAAI,SAAAoI,GAAA,MAAKP,GAAWO,MAQpD,QAASC,KAAqB,GAARlL,GAAQmL,UAAAtK,OAAA,OAAAQ,KAAA8J,UAAA,GAAAA,UAAA,GAAJ,GACpBpE,EAAS,GAAI9D,IACjBV,GAAQ6B,QAAQ,SAAA7D,GAAA,MAAKwG,GAAOnD,IAAIrD,EAAG6G,IAFP,IAAAgE,IAAA,EAAAC,GAAA,EAAAC,MAAAjK,EAAA,KAI5B,OAAAkK,GAAAC,EAAc5B,EAAQrH,GAAtBf,OAAAC,cAAA2J,GAAAG,EAAAC,EAAA9J,QAAAC,MAAAyJ,GAAA,EAAgC,IAAvB7K,GAAuBgL,EAAA1J,KAC9B,KAAKgG,EAAOd,EAAQxG,EAAGkL,EAAY1E,EAAOhH,IAAIQ,KAC5C,KAGF,IAAImL,MAAK3H,OAAAvD,EAAI+B,IACRwF,OAAO,SAAAxH,GAAA,MAA4B,KAAvBwG,EAAOhH,IAAIQ,GAAG8H,OAC1BxF,IAAI,SAAAtC,GAAA,MAAKwG,GAAOhH,IAAIQ,IAEzB,IAAImL,EAAG7K,QAAUb,GAAK,GAAI8D,KAAI4H,GAAIrD,MAAQ,EACxC,SAAOtE,OAAAvD,EAAI+B,IAASM,IAAI,SAAAtC,GAAA,MAA4B,KAAvBwG,EAAOhH,IAAIQ,GAAG8H,QAAatE,OAAAvD,EAAIuG,EAAOhH,IAAIQ,KAAI,GAAK,OAdxD,MAAAuB,GAAAuJ,GAAA,EAAAC,EAAAxJ,EAAA,aAAAsJ,GAAAI,EAAAxH,QAAAwH,EAAAxH,SAAA,WAAAqH,EAAA,KAAAC,IAkB5B,MAAOJ,GAAalL,GAGtB,QAASyL,GAAY1E,GACnB,SAAOhD,OAAAvD,EAAIuG,IAAQ4E,EAAa,EAAG5E,EAAOsB,KAAO,IAGnD,QAASsD,GAAaC,EAAKC,GACzB,MAAO5B,MAAKC,MAAMD,KAAKE,UAAY0B,EAAMD,EAAM,IAAMA,EH+BvDjM,OAAOC,eAAeZ,EAAS,cAC7B6C,OAAO,GAGT,IAAId,GAAiB,WAAc,QAASC,GAAcP,EAAKvB,GAAK,GAAI+B,MAAeC,GAAK,EAAUC,GAAK,EAAWC,MAAKC,EAAW,KAAM,IAAK,GAAiCC,GAA7BC,EAAKd,EAAIe,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAAoBV,EAAKW,KAAKN,EAAGO,QAAY3C,GAAK+B,EAAKJ,SAAW3B,GAA3DgC,GAAK,IAAoE,MAAOY,GAAOX,GAAK,EAAMC,EAAKU,EAAO,QAAU,KAAWZ,GAAMK,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIJ,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUR,EAAKvB,GAAK,GAAIwB,MAAMC,QAAQF,GAAQ,MAAOA,EAAY,IAAIe,OAAOC,WAAY9B,QAAOc,GAAQ,MAAOO,GAAcP,EAAKvB,EAAa,MAAM,IAAI6C,WAAU,4DG3QhlBY,EAAO,GAAImB,MAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACxDsD,EAAS,GAAItD,MAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE1DlB,EAAO,GAAIkB,KAAIsD,GACf7E,EAAUqE,EAAMjE,EAAMC,GAEtBoI,KAAWjH,OAAAvD,EAAIoC,IAAMC,IAAI,SAAAvD,GAAA,MAAKsH,GAAMjE,EAAM,GAAImB,KAAIxE,MACnDyE,UAAOA,OAAAvD,EAAImC,IAAME,IAAI,SAAAiJ,GAAA,MAAKlF,GAAM,GAAI9C,KAAIgI,GAAIlJ,MAC5CmB,OAAQ,WAIP,IAAK,GAHD5E,KAAM,IAAK,IAAK,MAAO,IAAK,IAAK,MAAO,IAAK,IAAK,MAClDI,IAAM,IAAK,IAAK,MAAO,IAAK,IAAK,MAAO,IAAK,IAAK,MAClD0L,KACK/L,EAAI,EAAGA,EAAIC,EAAE0B,OAAQ3B,IAC5B,IAAK,GAAIkG,GAAI,EAAGA,EAAI7F,EAAEsB,OAAQuE,IAC5B6F,EAAErJ,KAAKgF,EAAM,GAAI9C,KAAI3E,EAAED,IAAK,GAAI4E,KAAIvE,EAAE6F,KAI1C,OAAO6F,OAGTrC,EAAQ,GAAI3F,KACZX,EAAQ,GAAIW,KHySZI,GAA4B,EAC5BC,GAAoB,EACpBC,MAAiBlC,EAErB,KG3SA,OAAAmC,GAAAC,EAAclB,EAAdf,OAAAC,cAAA4B,GAAAG,EAAAC,EAAA/B,QAAAC,MAAA0B,GAAA,EAAuB,IAAd9C,GAAciD,EAAA3B,OH4RX,SG5RHtB,GACPqI,EAAMhF,IAAIrD,EAAGyK,EAASjD,OAAO,SAAAkD,GAAA,MAAKA,GAAErD,IAAIrH,KAExC,IAAID,GAAIsI,EAAM7I,IAAIQ,EAClB+B,GAAMsB,IAAIrD,EAAG,GAAIuD,QACbC,OAAAvD,EAAI,GAAIsD,QAAJC,OAAAvD,EAAYF,EAAE,IAAdE,EAAqBF,EAAE,IAAvBE,EAA8BF,EAAE,QAAMyH,OAAO,SAAAjF,GAAA,MAAKA,KAAMvC,OALzDA,IHqTP,MAAOuB,GACPwB,GAAoB,EACpBC,EAAiBzB,EACjB,QACA,KACOuB,GAA6BI,EAAUO,QAC1CP,EAAUO,SAEZ,QACA,GAAIV,EACF,KAAMC,IAsZZvE,EAAQmD,SGjgBNE,UAAW,WAGT,IAFA,GAAIoE,GAAWsC,EAAMmC,MAEbT,EAAOhE,IACbA,EAAWsC,EAAMmC,IAGnB,QACEzE,SAAUA,IAGdnE,MAAOA,IHugBH,SAAUrD,EAAQD","file":"main.18b27bc3ba974659cd32.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _sudoku = __webpack_require__(1);\n\nvar _sudoku2 = _interopRequireDefault(_sudoku);\n\n__webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar renderGrid = function renderGrid(peers) {\n\n  var grid = document.getElementById('grid-container');\n  var rows = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'];\n  var cols = [1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (x) {\n    return x.toString();\n  });\n\n  var peerIds = new Map();\n  var squares = new Map();\n  var squarePeers = new Map();\n\n  var focusedSquare = void 0;\n  var highlightedPeers = void 0;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = peers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var s = _ref2[0];\n      var p = _ref2[1];\n\n      peerIds.set(s.toLowerCase(), new Set([].concat(_toConsumableArray(p)).map(function (x) {\n        return x.toLowerCase();\n      })));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var n = 9;\n  var cellSize = grid.offsetWidth / n - 3;\n\n  var squareClass = 'col-1 square';\n  var contentClass = 'square-content';\n\n  var highlightPeers = function highlightPeers(s) {\n    if (highlightedPeers) highlightedPeers.forEach(function (p) {\n      if (p.id !== s) p.setAttribute('class', contentClass);\n    });\n\n    highlightedPeers = squarePeers.get(s);\n    highlightedPeers.forEach(function (p) {\n      return p.setAttribute('class', contentClass + ' highlight');\n    });\n  };\n\n  var highlightSquare = function highlightSquare(e) {\n    if (focusedSquare) focusedSquare.setAttribute('class', contentClass);\n\n    focusedSquare = e.target;\n    focusedSquare.setAttribute('class', contentClass + ' focused-content');\n    highlightPeers(e.target.id);\n  };\n\n  var onSquareClick = function onSquareClick(e) {\n    highlightSquare(e);\n  };\n\n  var onInput = function onInput(e) {\n    if (e.keyCode >= 49 && e.keyCode <= 57) {\n      if (focusedSquare) focusedSquare.innerHTML = e.key;\n    }\n  };\n\n  for (var i = 0; i < n; i++) {\n    var row = document.createElement('div');\n    row.setAttribute('class', 'row');\n    row.style.height = cellSize + 'px';\n\n    for (var j = 0; j < n; j++) {\n      var id = '' + rows[i] + cols[j];\n      var square = document.createElement('div');\n\n      square.id = id;\n      square.setAttribute('class', squareClass);\n\n      square.style.height = cellSize + 'px';\n      square.style.width = cellSize + 'px';\n      square.style.maxWidth = cellSize + 'px';\n      square.style.flex = '0 0 ' + cellSize + 'px';\n\n      var content = document.createElement('div');\n      content.id = id;\n      content.setAttribute('class', contentClass);\n\n      content.onclick = onSquareClick;\n      document.onkeydown = onInput;\n\n      square.appendChild(content);\n      row.appendChild(square);\n      squares.set(id, content);\n    }\n\n    grid.appendChild(row);\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = peerIds[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref3 = _step2.value;\n\n      var _ref4 = _slicedToArray(_ref3, 2);\n\n      var _s = _ref4[0];\n      var _p = _ref4[1];\n\n      squarePeers.set(_s, [].concat(_toConsumableArray(_p)).map(function (x) {\n        return squares.get(x);\n      }));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return squares;\n};\n\nvar puzzle = _sudoku2.default.getPuzzle();\nvar peers = _sudoku2.default.peers;\nvar squares = renderGrid(peers);\n\nvar _iteratorNormalCompletion3 = true;\nvar _didIteratorError3 = false;\nvar _iteratorError3 = undefined;\n\ntry {\n  for (var _iterator3 = puzzle.solution[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n    var _ref5 = _step3.value;\n\n    var _ref6 = _slicedToArray(_ref5, 2);\n\n    var s = _ref6[0];\n    var d = _ref6[1];\n\n    squares.get(s.toLowerCase()).innerHTML = [].concat(_toConsumableArray(d))[0];\n  }\n} catch (err) {\n  _didIteratorError3 = true;\n  _iteratorError3 = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n      _iterator3.return();\n    }\n  } finally {\n    if (_didIteratorError3) {\n      throw _iteratorError3;\n    }\n  }\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * A JavaScript port based on \"Solving Every Sudoku Puzzle\"\n * by Peter Norvig.\n *\n * The article can be found here:\n * - http://norvig.com/sudoku.html\n *\n * The original Python source can be found here:\n * - https://github.com/norvig/pytudes/blob/master/sudoku.py\n */\n\nvar rows = new Set(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I']);\nvar digits = new Set(['1', '2', '3', '4', '5', '6', '7', '8', '9']);\n\nvar cols = new Set(digits);\nvar squares = cross(rows, cols);\n\nvar unitlist = [].concat(_toConsumableArray(cols)).map(function (c) {\n  return cross(rows, new Set(c));\n}).concat([].concat(_toConsumableArray(rows)).map(function (r) {\n  return cross(new Set(r), cols);\n})).concat(function () {\n  var l = [['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']];\n  var d = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']];\n  var u = [];\n  for (var i = 0; i < l.length; i++) {\n    for (var j = 0; j < d.length; j++) {\n      u.push(cross(new Set(l[i]), new Set(d[j])));\n    }\n  }\n\n  return u;\n}());\n\nvar units = new Map();\nvar peers = new Map();\n\nvar _loop = function _loop(s) {\n  units.set(s, unitlist.filter(function (u) {\n    return u.has(s);\n  }));\n\n  var p = units.get(s);\n  peers.set(s, new Set([].concat(_toConsumableArray(new Set([].concat(_toConsumableArray(p[0]), _toConsumableArray(p[1]), _toConsumableArray(p[2]))))).filter(function (x) {\n    return x !== s;\n  })));\n};\n\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = squares[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var s = _step.value;\n\n    _loop(s);\n  }\n\n  /**\n   * Cross product of elements in A and elements in B.\n   */\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator.return) {\n      _iterator.return();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n\nfunction cross(a, b) {\n  var c = new Set();\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = a.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var a1 = _step2.value;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = (b.values() || b)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var b1 = _step3.value;\n\n          c.add(a1 + b1);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return c;\n}\n\n/**\n * Convert grid to a dict of possible values, {square: digits},\n * or return false if a contradiction is detected.\n */\nfunction parseGrid(grid) {\n  var values = new Map();\n  squares.forEach(function (s) {\n    return values.set(s, digits);\n  });\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = gridValues(grid).entries()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var _ref = _step4.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var s = _ref2[0];\n      var d = _ref2[1];\n\n      if (digits.has(d) && !assign(values, s, d)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert grid into a dict of {square: char} with '0' or '.' for empties.\n */\nfunction gridValues(grid) {\n  var chars = grid.filter(function (c) {\n    return digits.has(c) || c === '0' || c === '.';\n  });\n  var values = new Map();\n  var s = [].concat(_toConsumableArray(squares));\n\n  console.assert(chars.length === 81);\n\n  for (var i = 0; i < s.length; i++) {\n    values.set(s[i], chars[i]);\n  }\n\n  return values;\n}\n\n/**\n * Eliminate all the other values (except d) from values[s] and propagate.\n * Return values, except return False if a contradiction is detected.\n */\nfunction assign(values, s, d) {\n  var others = [].concat(_toConsumableArray(values.get(s))).filter(function (x) {\n    return x !== d;\n  });\n  return all(others.map(function (d2) {\n    return eliminate(values, s, d2);\n  })) ? values : false;\n}\n\n/**\n * Eliminate d from values[s]; propagate when values or places <= 2.\n * Return values, except return False if a contradiction is detected.\n */\nfunction eliminate(values, s, d) {\n  if (!values.get(s).has(d)) return values;\n\n  values.set(s, new Set([].concat(_toConsumableArray(values.get(s))).filter(function (x) {\n    return x !== d;\n  })));\n\n  if (!values.get(s).size) {\n    return false;\n  } else if (values.get(s).size === 1) {\n    var d2 = [].concat(_toConsumableArray(values.get(s)))[0];\n\n    if (!all([].concat(_toConsumableArray(peers.get(s))).map(function (s2) {\n      return eliminate(values, s2, d2);\n    }))) return false;\n  }\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = units.get(s)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var unit = _step5.value;\n\n      var dplaces = [].concat(_toConsumableArray(unit)).filter(function (s2) {\n        return values.get(s2).has(d);\n      });\n\n      if (!dplaces.length) {\n        return false;\n      } else if (dplaces.length === 1) {\n        if (!assign(values, dplaces[0], d)) return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return values;\n}\n\nfunction solve(grid) {\n  return search(parseGrid(grid));\n}\n\n/**\n * Using depth-first search and propagation, try all possible values.\n */\nfunction search(values) {\n  if (!values) return false;\n\n  if (all([].concat(_toConsumableArray(squares)).map(function (s) {\n    return values.get(s).size === 1;\n  }))) return values;\n\n  var s = [].concat(_toConsumableArray(squares)).filter(function (s) {\n    return values.get(s).size > 1;\n  }).sort(function (s1, s2) {\n    return values.get(s1).size - values.get(s2).size;\n  })[0];\n\n  return some(values.get(s), function (d) {\n    return search(assign(new Map(values), s, d));\n  });\n}\n\nfunction some(seq, func) {\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = seq[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var d = _step6.value;\n\n      var result = func(d);\n      if (result) return result;\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Fisher-Yates Shuffle\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nfunction shuffle(seq) {\n  var array = [].concat(_toConsumableArray(seq));\n  var currentIndex = array.length,\n      temporaryValue = void 0,\n      randomIndex = void 0;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction all(values) {\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = values[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var v = _step7.value;\n\n      if (!v) return false;\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * A puzzle is solved if each unit is a permutation of the digits 1 to 9.\n */\nfunction solved(values) {\n  function unitSolved(unit) {\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      for (var _iterator8 = unit[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var s = _step8.value;\n\n        var diff = [].concat(_toConsumableArray(values.get(s))).filter(function (d) {\n          return !digits.has(d);\n        });\n        if (diff.length > 0) return false;\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  return values && all(unitlist.map(function (u) {\n    return unitSolved(u);\n  }));\n}\n\n/**\n * Make a random puzzle with N or more assignments. Restart on contradictions.\n * Note the resulting puzzle is not guaranteed to be solvable, but empirically\n * about 99.8% of them are solvable. Some have multiple solutions\n */\nfunction randomPuzzle() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 17;\n\n  var values = new Map();\n  squares.forEach(function (s) {\n    return values.set(s, digits);\n  });\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = shuffle(squares)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var s = _step9.value;\n\n      if (!assign(values, s, randomValue(values.get(s)))) {\n        break;\n      }\n\n      var ds = [].concat(_toConsumableArray(squares)).filter(function (s) {\n        return values.get(s).size === 1;\n      }).map(function (s) {\n        return values.get(s);\n      });\n\n      if (ds.length >= n && new Set(ds).size >= 8) {\n        return [].concat(_toConsumableArray(squares)).map(function (s) {\n          return values.get(s).size === 1 ? [].concat(_toConsumableArray(values.get(s)))[0] : '0';\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  return randomPuzzle(n);\n}\n\nfunction randomValue(values) {\n  return [].concat(_toConsumableArray(values))[getRandomInt(0, values.size - 1)];\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexports.default = {\n  getPuzzle: function getPuzzle() {\n    var solution = solve(randomPuzzle());\n\n    while (!solved(solution)) {\n      solution = solve(randomPuzzle());\n    }\n\n    return {\n      solution: solution\n    };\n  },\n  peers: peers\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.18b27bc3ba974659cd32.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 18b27bc3ba974659cd32","import sudoku from './sudoku';\nimport '../css/main.css';\n\nlet renderGrid = (peers) => {\n\n  let grid = document.getElementById('grid-container');\n  let rows = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'];\n  let cols = [1, 2, 3, 4, 5, 6, 7, 8, 9].map(x => x.toString());\n\n  let peerIds = new Map();\n  let squares = new Map();\n  let squarePeers = new Map();\n\n  let focusedSquare;\n  let highlightedPeers;\n\n  for (let [s, p] of peers) {\n    peerIds.set(s.toLowerCase(), new Set([...p].map(x => x.toLowerCase())));\n  }\n\n  const n = 9;\n  const cellSize = (grid.offsetWidth / n) - 3;\n\n  const squareClass = 'col-1 square';\n  const contentClass = 'square-content';\n\n  let highlightPeers = s => {\n    if (highlightedPeers)\n      highlightedPeers.forEach(p => {\n        if (p.id !== s) p.setAttribute('class', contentClass);\n      });\n\n    highlightedPeers = squarePeers.get(s);\n    highlightedPeers.forEach(p => p.setAttribute('class', `${contentClass} highlight`));\n  };\n\n  let highlightSquare = e => {\n    if (focusedSquare)\n      focusedSquare.setAttribute('class', contentClass);\n\n    focusedSquare = e.target;\n    focusedSquare.setAttribute('class', `${contentClass} focused-content`);\n    highlightPeers(e.target.id);\n  };\n\n  let onSquareClick = e => {\n    highlightSquare(e)\n  };\n\n  let onInput = e => {\n    if (e.keyCode >= 49 && e.keyCode <= 57) {\n      if (focusedSquare) focusedSquare.innerHTML = e.key;\n    }\n  };\n\n  for (let i = 0; i < n; i++) {\n    let row = document.createElement('div');\n    row.setAttribute('class', 'row');\n    row.style.height = `${cellSize}px`;\n\n    for (let j = 0; j < n; j++) {\n      let id = `${rows[i]}${cols[j]}`;\n      let square = document.createElement('div');\n\n      square.id = id;\n      square.setAttribute('class', squareClass);\n\n      square.style.height = `${cellSize}px`;\n      square.style.width = `${cellSize}px`;\n      square.style.maxWidth = `${cellSize}px`;\n      square.style.flex = `0 0 ${cellSize}px`;\n\n      let content = document.createElement('div');\n      content.id = id;\n      content.setAttribute('class', contentClass);\n\n      content.onclick = onSquareClick;\n      document.onkeydown = onInput;\n\n      square.appendChild(content);\n      row.appendChild(square);\n      squares.set(id, content);\n    }\n\n    grid.appendChild(row)\n  }\n\n  for (let [s, p] of peerIds)\n    squarePeers.set(s, [...p].map(x => squares.get(x)));\n\n  return squares;\n};\n\nlet puzzle = sudoku.getPuzzle();\nlet peers = sudoku.peers;\nlet squares = renderGrid(peers);\n\nfor (let [s, d] of puzzle.solution)\n  squares.get(s.toLowerCase()).innerHTML = [...d][0];\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sudoku-ui.js","/**\n * A JavaScript port based on \"Solving Every Sudoku Puzzle\"\n * by Peter Norvig.\n *\n * The article can be found here:\n * - http://norvig.com/sudoku.html\n *\n * The original Python source can be found here:\n * - https://github.com/norvig/pytudes/blob/master/sudoku.py\n */\n\nconst rows = new Set(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I']);\nconst digits = new Set(['1', '2', '3', '4', '5', '6', '7', '8', '9']);\n\nconst cols = new Set(digits);\nconst squares = cross(rows, cols);\n\nconst unitlist = [...cols].map(c => cross(rows, new Set(c)))\n    .concat([...rows].map(r => cross(new Set(r), cols)))\n    .concat((() => {\n      let l = [['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']];\n      let d = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']];\n      let u = [];\n      for (let i = 0; i < l.length; i++) {\n        for (let j = 0; j < d.length; j++) {\n          u.push(cross(new Set(l[i]), new Set(d[j])));\n        }\n      }\n\n      return u;\n    })());\n\nlet units = new Map();\nlet peers = new Map();\n\nfor (let s of squares) {\n  units.set(s, unitlist.filter(u => u.has(s)));\n\n  let p = units.get(s);\n  peers.set(s, new Set(\n      [...new Set([...p[0], ...p[1], ...p[2]])].filter(x => x !== s)));\n}\n\n/**\n * Cross product of elements in A and elements in B.\n */\nfunction cross(a, b) {\n  let c = new Set();\n\n  for (let a1 of a.values()) {\n    for (let b1 of b.values() || b) {\n      c.add(a1 + b1);\n    }\n  }\n\n  return c;\n}\n\n/**\n * Convert grid to a dict of possible values, {square: digits},\n * or return false if a contradiction is detected.\n */\nfunction parseGrid(grid) {\n  let values = new Map();\n  squares.forEach(s => values.set(s, digits));\n\n  for (let [s, d] of gridValues(grid).entries()) {\n    if (digits.has(d) && !assign(values, s, d)) {\n      return false;\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert grid into a dict of {square: char} with '0' or '.' for empties.\n */\nfunction gridValues(grid) {\n  let chars = grid.filter(c => digits.has(c) || c === '0' || c === '.');\n  let values = new Map();\n  let s = [...squares];\n\n  console.assert(chars.length === 81);\n\n  for (let i = 0; i < s.length; i++) {\n    values.set(s[i], chars[i]);\n  }\n\n  return values;\n}\n\n/**\n * Eliminate all the other values (except d) from values[s] and propagate.\n * Return values, except return False if a contradiction is detected.\n */\nfunction assign(values, s, d) {\n  let others = [...values.get(s)].filter(x => x !== d);\n  return all(others.map(d2 => eliminate(values, s, d2))) ? values : false;\n}\n\n/**\n * Eliminate d from values[s]; propagate when values or places <= 2.\n * Return values, except return False if a contradiction is detected.\n */\nfunction eliminate(values, s, d) {\n  if (!values.get(s).has(d))\n    return values;\n\n  values.set(s, new Set([...values.get(s)].filter(x => x !== d)));\n\n  if (!values.get(s).size) {\n    return false;\n\n  } else if (values.get(s).size === 1) {\n    let d2 = [...values.get(s)][0];\n\n    if (!all([...peers.get(s)].map(s2 => eliminate(values, s2, d2))))\n      return false;\n  }\n\n  for (let unit of units.get(s)) {\n    let dplaces = [...unit].filter(s2 => values.get(s2).has(d));\n\n    if (!dplaces.length) {\n      return false;\n    } else if (dplaces.length === 1) {\n      if (!assign(values, dplaces[0], d))\n        return false;\n    }\n  }\n\n  return values;\n}\n\nfunction solve(grid) {\n  return search(parseGrid(grid));\n}\n\n/**\n * Using depth-first search and propagation, try all possible values.\n */\nfunction search(values) {\n  if (!values)\n    return false;\n\n  if (all([...squares].map(s => values.get(s).size === 1)))\n    return values;\n\n  let s = [...squares]\n      .filter(s => values.get(s).size > 1)\n      .sort((s1, s2) => values.get(s1).size - values.get(s2).size)[0];\n\n  return some(values.get(s), d => search(assign(new Map(values), s, d)));\n}\n\nfunction some(seq, func) {\n  for (let d of seq) {\n    let result = func(d);\n    if (result) return result;\n  }\n\n  return false;\n}\n\n/**\n * Fisher-Yates Shuffle\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nfunction shuffle(seq) {\n  let array = [...seq];\n  let currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction all(values) {\n  for (let v of values)\n    if (!v) return false;\n\n  return true;\n}\n\n/**\n * A puzzle is solved if each unit is a permutation of the digits 1 to 9.\n */\nfunction solved(values) {\n  function unitSolved(unit) {\n    for (let s of unit) {\n      let diff = [...values.get(s)].filter(d => !digits.has(d));\n      if (diff.length > 0) return false;\n    }\n\n    return true;\n  }\n\n  return values && all(unitlist.map(u => unitSolved(u)));\n}\n\n/**\n * Make a random puzzle with N or more assignments. Restart on contradictions.\n * Note the resulting puzzle is not guaranteed to be solvable, but empirically\n * about 99.8% of them are solvable. Some have multiple solutions\n */\nfunction randomPuzzle(n = 17) {\n  let values = new Map();\n  squares.forEach(s => values.set(s, digits));\n\n  for (let s of shuffle(squares)) {\n    if (!assign(values, s, randomValue(values.get(s)))) {\n      break;\n    }\n\n    let ds = [...squares]\n        .filter(s => values.get(s).size === 1)\n        .map(s => values.get(s));\n\n    if (ds.length >= n && new Set(ds).size >= 8) {\n      return [...squares].map(s => values.get(s).size === 1 ? [...values.get(s)][0] : '0');\n    }\n  }\n\n  return randomPuzzle(n);\n}\n\nfunction randomValue(values) {\n  return [...values][getRandomInt(0, values.size - 1)];\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default {\n  getPuzzle: () => {\n    let solution = solve(randomPuzzle());\n\n    while (!solved(solution)) {\n      solution = solve(randomPuzzle());\n    }\n\n    return {\n      solution: solution\n    };\n  },\n  peers: peers\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/sudoku.js"],"sourceRoot":""}